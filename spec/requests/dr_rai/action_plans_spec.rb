 require 'rails_helper'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to test the controller code that
# was generated by Rails when you ran the scaffold generator.
#
# It assumes that the implementation code is generated by the rails scaffold
# generator. If you are using any extension libraries to generate different
# controller code, this generated spec may or may not pass.
#
# It only uses APIs available in rails and/or rspec-rails. There are a number
# of tools you can use to make these specs even more expressive, but we're
# sticking to rails and rspec-rails APIs to keep things simple and stable.

RSpec.describe "/dr_rai/action_plans", type: :request do

  # TODO: Complete this suite — DrRai::Indicators Request Spec

  let(:district_with_facilities) { setup_district_with_facilities }
  let(:region) { district_with_facilities[:region] }
  let(:facility_1) { district_with_facilities[:facility_1] }

  let(:valid_attributes) {
    {
        actions: '',
        indicator_id: '',
        period: 'Q2-2025',
        region_slug: region.slug,
        statement: 'Must be completed before tomorrow',
        target_type: 'DrRai::PercentageTarget',
        target_value: 12
    }
  }

  let(:invalid_attributes) {
    skip("Add a hash of attributes invalid for your model")
  }

  describe "POST /create" do
    context "with valid parameters" do
      it "creates a new DrRai::ActionPlan" do
        expect {
          post dr_rai_action_plans_url, params: { dr_rai_action_plan: valid_attributes }
        }.to change(DrRai::ActionPlan, :count).by(1)
      end

      it "redirects to the created dr_rai_action_plan" do
        post dr_rai_action_plans_url, params: { dr_rai_action_plan: valid_attributes }
        expect(response).to redirect_to(dr_rai_action_plan_url(@dr_rai_action_plan))
      end
    end

    context "with invalid parameters" do
      it "does not create a new DrRai::ActionPlan" do
        expect {
          post dr_rai_action_plans_url, params: { dr_rai_action_plan: invalid_attributes }
        }.to change(DrRai::ActionPlan, :count).by(0)
      end

      it "renders a successful response (i.e. to display the 'new' template)" do
        post dr_rai_action_plans_url, params: { dr_rai_action_plan: invalid_attributes }
        expect(response).to be_successful
      end
    end
  end

  describe "DELETE /destroy" do
    it "destroys the requested dr_rai_action_plan" do
      action_plan = DrRai::ActionPlan.create! valid_attributes
      expect {
        delete dr_rai_action_plan_url(dr_rai_action_plan)
      }.to change(DrRai::ActionPlan, :count).by(-1)
    end

    it "redirects to the dr_rai_action_plans list" do
      action_plan = DrRai::ActionPlan.create! valid_attributes
      delete dr_rai_action_plan_url(dr_rai_action_plan)
      expect(response).to redirect_to(dr_rai_action_plans_url)
    end
  end
end
