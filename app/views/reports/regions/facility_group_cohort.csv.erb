<% csv = CSV.generate(headers: true) do |csv| %>
<% csv << ["Report generated at", Time.current] %>
<% csv << ["#{@region.name} #{@period.adjective} Cohort Report"] %>
<% csv << ['Facility', 'Facility type'].concat(@cohort_analytics.each_with_index.flat_map do |(report_dates, analytics), index|
  [
    'Cohort period',
    'Follow up period',
    'Patients in cohort',
    'Patients followed up',
    'Patients controlled',
    'Patients uncontrolled',
    "Patients didn't attend",
    '% BP Control',
    '% BP Uncontrolled',
    '% Defaulted',
    nil
  ]
end) %>
<% csv << [] %>
<% @facility_keys.each do |facility| %>
<% csv << [facility[:name], facility[:type]].concat(@cohort_analytics.each_with_index.flat_map do |(report_dates, analytics), index|
  cohort_start, report_start = report_dates
  registered = analytics.dig(:cohort_patients, facility[:id]) || 0
  followed_up = analytics.dig(:followed_up, facility[:id]) || 0
  defaulted = analytics.dig(:defaulted, facility[:id]) || 0
  controlled = analytics.dig(:controlled, facility[:id]) || 0
  uncontrolled = analytics.dig(:uncontrolled, facility[:id]) || 0
  if @period.quarter?
    report_period = quarter_string(report_start)
    cohort_period = quarter_string(cohort_start)
  else
    report_period = [report_start.strftime("%b %-d"), (report_start + 1.month).end_of_month.strftime("%b %-d")].join("-")
    cohort_period = cohort_start.strftime("%b-%Y")
  end
  if registered > 0
    controlled_percent = (controlled.to_f / registered * 100).round
    uncontrolled_percent = (uncontrolled.to_f / registered * 100).round
    default_percent = (defaulted.to_f / registered * 100).round
  else
    controlled_percent = 0
    uncontrolled_percent = 0
    default_percent = 0
  end

  [
    cohort_period,
    report_period,
    registered,
    followed_up,
    controlled,
    uncontrolled,
    defaulted,
    controlled_percent,
    uncontrolled_percent,
    default_percent,
    nil
  ]
end) %>
<% end %>
<% csv << [] %>
<% csv << ["#{@region.facilities.first.district} Facilites Report"] %>
<%
  headers = [
    "Facility name",
    "Facility type",
    "Total registered patients"
  ]
  dates = dates_for_periods(@period.type, 3, include_current_period: true)
  ["Follow up patients", "Registered patients"].each do |metric|
    dates.each do |date|
      headers << "#{metric} #{format_period(@period.type, date)}"
    end
  end
%>
<% csv << headers %>
<% csv << [
    "All",
    nil,
    @dashboard_analytics.sum { |_, row| row[:total_registered_patients] || 0 },
    *dates.map { |period| analytics_totals(@dashboard_analytics, :follow_up_patients_by_period, period) },
    *dates.map { |period| analytics_totals(@dashboard_analytics, :registered_patients_by_period, period) }
  ]
%>
<% current_admin.accessible_facilities(:view_reports).each do |facility| %>
  <% if @dashboard_analytics[facility.id].present? %>
    <% csv << [
        facility.name,
        facility.facility_type,
        @dashboard_analytics.dig(facility.id, :total_registered_patients) || 0,
        *dates.map { |period| @dashboard_analytics.dig(facility.id, :follow_up_patients_by_period, period) || 0 },
        *dates.map { |period| @dashboard_analytics.dig(facility.id, :registered_patients_by_period, period) || 0 }
      ] %>
  <% end %>
<% end %>
<% end.html_safe %>
<%= csv %>
