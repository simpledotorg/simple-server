en:
  date:
    formats:
      default: "%d-%^b-%Y"
  time:
    formats:
      default: "%d-%^b-%Y %I:%M %p"
      iso8601: "%FT%T%:z"
  errors:
    messages:
      already_confirmed: "was already confirmed, please try signing in"
      confirmation_period_expired: "needs to be confirmed within %{period}, please request a new one"
      expired: "has expired, please request a new one"
      not_found: "not found"
      not_locked: "was not locked"
      not_saved:
        one: "1 error prohibited this %{resource} from being saved:"
        other: "%{count} errors prohibited this %{resource} from being saved:"
  region_type:
    state: state
    district: district
    block: block
    facility: facility
  name: "Name"
  phone_number: "Phone Number"
  registration_approval_email:
    accessible_facilities: "User will have access to data from"
    organization: "Organization"
    registration_facility: "Registration Facility"
    subject: "New Registration: User %{full_name} is requesting access to %{org_name} facilities."
    allow_or_deny_access: "Allow or deny access"
  reset_password_approval_email:
    accessible_facilities: "User will have access to data from"
    organization: "Organization"
    registration_facility: "Registration Facility"
    subject: "PIN Reset: User %{full_name} is requesting access."
    allow_or_deny_access: "Allow or deny access"
  anonymized_data_download_email:
    accessible_facilities: "Attached documents contain anonymized data from"
    organization: "Organization"
    district_subject: "Anonymized Data dump for District %{district_name}, requested by User %{recipient_name}"
    facility_subject: "Anonymized Data dump for Facility %{facility_name}, requested by User %{recipient_name}"
    district_notice: "You will soon be emailed a copy of the anonymized data for %{district_name}."
    facility_notice: "You will soon be emailed a copy of the anonymized data for %{facility_name}."
  patient_list_email:
    subject: "Patient list for %{model_type} %{model_name} attached"
    notice: "You will soon be emailed a copy of the patient line list for %{model_type} %{model_name}."
    patient_list: "Patient list"
    requested: "As you requested, please find the patient list for %{model_type} %{model_name} attached. It contains patient details for every patient registered in the %{model_type}."
    confidential: "Please note that this information is confidential and should be kept private."
    unrequested_html: 'If you did not request this or have questions, please immediately reply to <a href="mailto:help@simple.org">help@simple.org</a>'
  patients_protected_copy:
    title: Patients protected from heart attacks & strokes in %{region_name}
  bp_controlled_copy:
    reports_card_subtitle: "Hypertension patients with BP <140/90 at their last visit in the last 3 months"
    numerator: "Patients with BP <140/90 at their last visit in the last 3 months"
  bp_not_controlled_copy:
    reports_card_subtitle: "Hypertension patients with BP ≥140/90 at their last visit in the last 3 months"
    numerator: "Patients with BP ≥140/90 at their last visit in the last 3 months"
  htn_cascade_copy: 
    title: Hypertension treatment cascade
    reports_card_subtitle: "Estimated adults in %{region_name} with hypertension who are registered, under care, and controlled till %{period}"
  bs_below_200_copy:
    reports_card_title: "Blood sugar < 200"
    reports_card_title_fbs: "Blood sugar < 126"
    summary: "patients with a blood sugar <200 from"
    summary_fbs: "patients with a blood sugar <126mg/dL from"
    reports_card_subtitle: "Diabetes patients in %{region_name} with blood sugar <200 at their last visit in the last 3 months"
    reports_card_subtitle_fbs: "Diabetes patients in %{region_name} with FBS <126 mg/dL or HbA1c <7% at their last visit in the last 3 months"
    numerator: "Patients with RBS/PPBS <200, FBS <126, or HbA1c <7.0 at their last visit in the last 3 months"
    numerator_fbs: "Patients with FBS <126mg/dL, or HbA1c <7% at their last visit in the last 3 months"
    rbs_ppbs:
      numerator: "Patients with RBS/PPBS <200 at their last visit in the last 3 months"
    fasting:
      numerator: "Patients with FBS <126 at their last visit in the last 3 months"
    hba1c:
      numerator: "Patients with HbA1c <7.0 at their last visit in the last 3 months"
  bs_over_200_copy:
    reports_card_title: "Blood sugar 200-299 or ≥300"
    reports_card_title_fbs: "Blood sugar 126-199 or ≥200"
    reports_card_subtitle: "Diabetes patients in %{region_name} with blood sugar 200-299 or blood sugar ≥300 at their last visit in the last 3 months"
    reports_card_subtitle_fbs: "Diabetes patients in %{region_name} with FBS ≥126mg/dL or HbA1c ≥7% at their last visit in the last 3 months"
    bs_200_to_299:
      title: "Blood Sugar 200-299"
      title_fbs: "Blood Sugar 126-199"
      summary: "patients with a blood sugar 200-299 from"
      summary_fbs: "patients with FBS 126-199mg/dL or HbA1c 7%-8.9% from"
      numerator: "Patients with RBS/PPBS 200-299, FBS 126-199, or HbA1c 7.0-8.9 at their last visit in the last 3 months"
      numerator_fbs: "Patients with FBS 126-199mg/dL, or HbA1c 7%-8.9% at their last visit in the last 3 months"
      rbs_ppbs:
        numerator: "Patients with RBS/PPBS 200-299 at their last visit in the last 3 months"
      fasting:
        numerator: "Patients with FBS 126-199 at their last visit in the last 3 months"
      hba1c:
        numerator: "Patients with HbA1c 7.0-8.9 at their last visit in the last 3 months"
    bs_over_300:
      title: "Blood sugar ≥300"
      title_fbs: "Blood sugar ≥200"
      numerator: "Patients with RBS/PPBS ≥300, FBS ≥200, or HbA1c ≥9.0 at their last visit in the last 3 months"
      numerator_fbs: "Patients with FBS ≥200mg/dL, or HbA1c ≥9% at their last visit in the last 3 months"
      summary: "patients with a blood sugar ≥300 from"
      summary_fbs: "patients with FBS ≥200mg/dL or HbA1c ≥9% from"
      rbs_ppbs:
        numerator: "Patients with RBS/PPBS ≥300 at their last visit in the last 3 months"
      fasting:
        numerator: "Patients with FBS ≥200 at their last visit in the last 3 months"
      hba1c:
        numerator: "Patients with HbA1c ≥9.0 at their last visit in the last 3 months"
  missed_visits_copy:
    reports_card_subtitle: "Hypertension patients with no visit in the last 3 months"
    numerator: "Patients with no visit in the last 3 months"
  diabetes_missed_visits_copy:
    reports_card_subtitle: "Diabetes patients in %{region_name} with no visit in the last 3 months"
    numerator: "Patients with no visit in the last 3 months"
    denominator: "Diabetes patients assigned to %{region_name}, registered before the last 3 months. Dead and lost to follow-up patients are excluded."
  bs_measurement_details_copy:
    reports_card_subtitle: "Blood sugar measurements for diabetes patients in %{region_name} registered before %{period_registered} with a blood sugar taken between %{period_start} to %{period_end}"
    numerator: "The number of blood sugar measurements, broken down by measurement type, for treatment outcomes of diabetes patients under care with a blood sugar taken on the last visit within the last 3 months. "
    assigned_patients_with_bs_measurement: "Diabetes patients assigned to %{region_name} who had a Blood sugar measurement in the last 3 months. Dead and lost to follow-up patients are excluded."
  visit_but_no_bp_taken_copy:
    numerator: "Patients with no BP taken at their last visit in the last 3 months"
  visit_but_no_bs_taken_copy:
    numerator: "Patients with no blood sugar taken at their last visit in the last 3 months"
  lost_to_follow_up_copy:
    reports_card_subtitle: "Hypertension patients with no visit in the last 12 months"
    numerator: "Patients with no visit in the last 12 month"
  diabetes_lost_to_follow_up_copy:
    reports_card_subtitle: "Diabetes patients with no visit in the last 12 months"
    numerator: "Patients with no visit in the last 12 months"
  registered_patients_copy:
    reports_card_subtitle: "Monthly and total hypertension patients registered in %{region_name}"
    monthly_registered_patients: "Hypertension patients registered during a month in %{region_name}."
    total_registered_patients: "Total hypertension patients registered in %{region_name}."
  population_coverage:
    numerator: "Total %{diagnosis} patients registered."
    denominator: "Total estimated population with %{diagnosis}."
    add_missing_estimate:
      accessible_region: "Add the estimated %{diagnosis} population to see the coverage percentage."
      accessible_region_with_region_name: "Add the estimated %{diagnosis} population for %{region_name} to see the coverage percentage."
      inaccessible_region: "Ask a Dashboard admin to add the estimated population with %{diagnosis} for %{@region_name} to see the %{diagnosis} coverage percentage."
    add_missing_child_estimate:
      accessible_region: "Add the estimated population of %{diagnosis} patients for all %{child_type} to see the coverage percentage."
      inaccessible_region: "Ask a Dashboard admin to add the estimated population with %{diagnosis} for all %{child_type} in %{@region.name} to see the %{diagnosis} coverage percentage."
  registered_diabetes_patients_copy:
    reports_card_subtitle: "Monthly and total diabetes patient registrations and follow-up visits in %{region_name}"
    monthly_registered_patients: "Diabetes patients registered during a month in %{region_name}."
    total_registered_patients: "Total diabetes patients registered in %{region_name}"
    monthly_followup_patients: "Diabetes patients with a BP measure taken, a blood sugar measure taken, an appointment scheduled, or their medications refilled during a month in %{region_name}"
  assigned_patients_copy:
    total_assigned_patients: "Hypertension patients assigned to a facility in %{region_name}. Dead patients are excluded."
    facility_assigned_patients: "Hypertension patients assigned to %{region_name}. Dead patients are excluded."
  diabetes_assigned_patients_copy:
    total_assigned_patients: "Diabetes patients assigned to %{region_name}. Dead patients are excluded."
  call_results_copy:
    monthly_overdue_calls_made: "The number of calls made to overdue diabetes and hypertension patients in a month"
  denominator_copy: "Hypertension patients assigned to %{region_name}, registered before the last 3 months. Dead and lost to follow-up patients are excluded."
  denominator_with_ltfu_copy: "Hypertension patients assigned to %{region_name}, registered before the last 3 months. Dead patients are excluded."
  diabetes_denominator_copy: "Diabetes patients assigned to %{region_name}, registered before the last 3 months. Dead and lost to follow-up patients are excluded."
  diabetes_denominator_with_ltfu_copy: "Diabetes patients assigned to %{region_name}, registered before the last 3 months. Dead patients are excluded."
  ltfu_denominator_copy: "Hypertension patients assigned to %{region_name}. Dead patients are excluded."
  diabetes_ltfu_denominator_copy: "Diabetes patients assigned to %{region_name}. Dead patients are excluded."
  follow_up_patients_copy: "Hypertension patients with a BP measure taken, a blood sugar taken, an appointment scheduled, or their medications refilled during a month in %{region_name}"
  diabetes_follow_up_patients_copy: "Diabetes patients with a BP measure taken, a blood sugar taken, an appointment scheduled, or their medications refilled during a month in %{region_name}"
  patients_under_care_copy: "Hypertension patients with a visit in the last 12 months."
  patients_bp_controlled_copy: "Hypertension patients with BP <140/90 at their last visit in the last 3 months (from patients enrolled more than 3 months ago)."
  diabetes_patients_under_care_copy: "Diabetes patients with a visit in the last 12 months"
  bp_measures_taken_copy: "All BP measures taken in a month by healthcare workers at %{region_name}"
  bs_measures_taken_copy: "All blood sugar measurements taken in a month by healthcare workers at %{region_name}"
  hypertension_patient_coverage_copy: "Total registered patients diagnosed with hypertension divided by the region's estimated hypertensive population"
  diabetes_patient_coverage_copy: "Total registered patients diagnosed with diabetes divided by the region's estimated diabetic population"
  total_estimated_hypertensive_population:
    district_copy: "The approximate number of people in %{region_name} with hypertension (usually derived from a STEPS survey)."
    state_copy: "The sum of %{region_name}'s %{child_region_type} populations entered on the Dashboard. This number is only displayed if all %{child_region_type_plural} have a population."
  total_estimated_diabetic_population:
    district_copy: "The approximate number of people in %{region_name} with diabetes"
    state_copy: "The sum of %{region_name}'s %{child_region_type} populations entered on the Dashboard. This number is only displayed if all %{child_region_type_plural} have a population."
  medications_dispensation_copy:
    numerator: "Number of days until a patient's next scheduled appointment"
    denominator: "Total appointments scheduled for follow-up patients during a month."

  overdue_patients_definition: "A patient with a scheduled visit date which has passed with no visit."
  overdue_patients:
    reports_card_subtitle: "Hypertension patients that are overdue at the start of the month"
    numerator: "Patients that are overdue at the start of the month."
    denominator: "Hypertension patients assigned to %{region_name}. Deleted, dead and lost to follow-up patients are excluded."
  overdue_patients_called: 
      reports_card_subtitle: "Total overdue hypertension patients called during the month"
      numerator: "Unique patients with at least one ‘Result of call...’ marked during the month."
      numerator_note: "Note: This number includes patients that become overdue during the month and received a call, they may not be part of the denominator."
      denominator: "Hypertension patients assigned to %{region_name} that are overdue at the start of the month. Deleted, dead and lost to follow-up are excluded."
  overdue_patients_call_activity: 
    reports_card_subtitle: "The number of overdue hypertension patients called during the month"
    patients_called: "Unique patients with at least one ‘Result of call...’ marked during the month."
    percent_called_numerator: "Unique patients with at least one ‘Result of call...’ marked by user during the month."
    percent_called_denominator: "Hypertension patients assigned to %{region_name} that are overdue at the start of the month. Deleted, dead and lost to follow-up are excluded."
  overdue_toggle_tooltip:
    main: "Patients marked ‘Removed from overdue list’ before the 1st of the month and patients without a phone number are excluded."
    additional: |
      Patients marked ‘Removed from overdue list’ before the 1st of the month and patients without a phone number are excluded.
      <br>
      <br>
      ‘Remove from overdue list‘ reason must be one of following:
    list: "Patient not responding, Phone number does not work, Transferred to another public health facility, Moved to a private practitioner, Other reason"

  overdue_patients_return_to_care:
    reports_card_subtitle: "Overdue hypertension patients that returned to care within 15 days of receiving their first call"
    numerator: "Patients that returned to care within 15 days of their first call."
    denominator: "Hypertension patients assigned to %{region_name} with at least one ‘Result of call...’ marked during the month. Deleted, dead and lost to follow-up are excluded."

  admin:
    reset_otp_alert: "Are you sure you want to reset the OTP? This will invalidate the previous OTP and a SMS will be sent to the user with the new OTP"
    disable_access_alert: "Are you sure you want to disable the access for user?"
    enable_access_alert: "Are you sure you want to enable the access for user?"
    allowed_access_to_user: "%{admin_name} allowed access"
    denied_access_to_user: "%{admin_name} denied access"
    dashboard_title: "Simple Dashboard"
    phi_download_alert: "You are about to download confidental patient data. Are you sure you want to proceed?"
    phi_anonymized_download_alert: "You are about to download confidential (anonymized) patient data. Are you sure you want to proceed?"

  devise:
    confirmations:
      confirmed: "Your email address has been confirmed."
      send_instructions: "You will receive an email with instructions for how to confirm your email address in a few minutes."
      send_paranoid_instructions: "If your email address exists in our database, you will receive an email with instructions for how to confirm your email address in a few minutes."
    failure:
      already_authenticated: "You are already signed in."
      inactive: "Your account is not activated yet."
      invalid: "%{authentication_keys} or password are incorrect."
      invited: "You have a pending invitation, accept it to finish creating your account."
      locked: "Your account is locked. You will receive an email with instructions for how to unlock your account in a few minutes."
      last_attempt: "You have one more attempt before your account is locked."
      not_found_in_database: "Invalid %{authentication_keys} or password."
      timeout: "Your session expired. Please sign in again to continue."
      unauthenticated: "You must sign in before continuing."
      unconfirmed: "You have to confirm your email address before continuing."
    invitations:
      send_instructions: "An invitation email has been sent to %{email}."
      invitation_token_invalid: "The invitation token provided is not valid!"
      updated: "Your password was set successfully. You are now signed in."
      updated_not_active: "Your password was set successfully."
      no_invitations_remaining: "No invitations remaining"
      invitation_removed: "Your invitation was removed."
      new:
        header: "Invite Admin"
        submit_button: "Send an invitation"
      edit:
        header: "Set your password"
        submit_button: "Set password"
    mailer:
      confirmation_instructions:
        subject: "Confirmation instructions"
      email_changed:
        subject: "Email Changed"
      invitation_instructions:
        subject: "Access the Simple Dashboard"
        app: "Simple Dashboard"
        someone_invited_you: "You are invited as an admin to the Simple Dashboard"
        accept: "Accept invite"
        accept_until: "This invitation will expire on %{due_date}."
        ignore: "If you do not want to accept the invitation, please ignore this email."
        click_button: "Click below to accept your invitation."
        link: "Dashboard:"
        username: "Username:"
        confirm: "Confirm account"
      password_change:
        subject: "Password Changed"
      reset_password_instructions:
        subject: "Reset password instructions"
      unlock_instructions:
        subject: "Unlock instructions"
    omniauth_callbacks:
      failure: 'Could not authenticate you from %{kind} because "%{reason}".'
      success: "Successfully authenticated from %{kind} account."
    password_creation:
      needs_number: "Includes one number"
      needs_lower_case: "Includes one lower case character"
      needs_upper_case: "Includes one upper case character"
      prompt: "Keep your account's data private. Create a secure password:"
      reset_button: "Change password"
      reset_header: "Change your password"
      submission_error: "There was an error changing your password. Please try again."
      too_short: "At least 10 characters long"
      validation_error: "There was an error validating your password. Please refresh the page."
    passwords:
      no_token: "You can't access this page without coming from a password reset email. If you do come from a password reset email, please make sure you used the full URL provided."
      send_instructions: "You will receive an email with instructions on how to reset your password in a few minutes."
      send_paranoid_instructions: "If your email address exists in our database, you will receive a password recovery link at your email address in a few minutes."
      updated: "Your password has been changed successfully. You are now signed in."
      updated_not_active: "Your password has been changed successfully."
    registrations:
      destroyed: "Bye! Your account has been successfully cancelled. We hope to see you again soon."
      signed_up: "Welcome! You have signed up successfully."
      signed_up_but_inactive: "You have signed up successfully. However, we could not sign you in because your account is not yet activated."
      signed_up_but_locked: "You have signed up successfully. However, we could not sign you in because your account is locked."
      signed_up_but_unconfirmed: "A message with a confirmation link has been sent to your email address. Please follow the link to activate your account."
      update_needs_confirmation: "You updated your account successfully, but we need to verify your new email address. Please check your email and follow the confirm link to confirm your new email address."
      updated: "Your account has been updated successfully."
    sessions:
      signed_in: ""
      signed_out: "Signed out successfully."
      already_signed_out: "Signed out successfully."
    unlocks:
      send_instructions: "You will receive an email with instructions for how to unlock your account in a few minutes."
      send_paranoid_instructions: "If your account exists, you will receive an email with instructions for how to unlock it in a few minutes."
      unlocked: "Your account has been unlocked successfully. Please sign in to continue."

  api:
    documentation:
      import_description: |
        # API spec for Simple Server
        This API spec documents the Import API for partner organizations that want to send their data to Simple. The API payloads are based on modified versions of [FHIR](http://hl7.org/fhir/R4/) specification resources.
        
        ## Authorization
        Authorization is done via OAuth 2.0, using the [Client Credential flow](https://www.oauth.com/oauth2-servers/access-tokens/client-credentials/). At the end of this flow, clients will receive an access token which is attached to all the requests to import data.
        
        We recommend using popular open source [OAuth client libraries](https://oauth.net/code/) that will perform the flow in order to obtain the access token.

      description: |
        # API spec for Simple Server
        ## Sync APIs
        This API spec documents the endpoints that the devices (that are offline to varying levels) will use to sync data. The sync end points will send and receive bulk (a list of) entities. Both sending and receiving can be batched with configurable batch-sizes to accommodate low network bandwidth situations.

        ## Nesting resources
        The APIs have been designed to provide an optimal balance between accuracy and simplicity. Some of the APIs (patients) will be nested, and some other (blood pressures) will be flat.

        ## Sync Mechanism
        Refer to the [related ADR](https://github.com/simpledotorg/simple-server/blob/master/doc/arch/001-synchronization.md).

        ## API Authentication
        There are two types of authentication available to access different parts of the Simple API.
        - User Authentication - For medical professionals using the Simple App. Grants access to most of the Simple API
          to read and write data for communities of patients.
        - Patient authentication - For individual patients. Grants access to read a patient's own data.

        ### User Authentication

        A Simple client can make authenticated requests to the Simple API on behalf of a medical professional with the
        following three required credentials:
        - API Access Token
        - User ID
        - Facility ID

        In order to obtain these credentials, a Simple client can authenticate a user with the following steps. The
        client will need the user's registered phone number to perform the authentication.
        1. Submit the users phone number to the [`POST /v4/users/find` endpoint](#tag/User/paths/~1users~1find/post). If
        a user exists with this phone number, the response will return their id.
        2. Submit the user's id retreived in the previous step, along with the user's password to the
        [`POST v4/users/activate` endpoint](#tag/User/paths/~1users~1activate/post).
        This will validate the user's password, and trigger an OTP to be sent to the user's phone number.
        3. Submit the user's id, their password, and the OTP (received after the previous step) to the
        [`POST v3/login` endpoint](#tag/User-Login/paths/~1login/post). If the submitted otp and password are valid,
        this will return an access token that can be used to authenticate the user. The access token will remain valid
        until the user signs into another device.

        On successful authentication, the client will receive a payload containing an API access token and some user
        information.
        The following headers need to be attached to subsequent requests as shown below.
        - `Authorization: Bearer <access token>`
        - `X-User-Id: <user ID>`
        - `X-Facility-Id: <facility ID>` This is the id for either the registration facility of the user, or another
        facility in their facility group.

        ### Patient Authentication
        A Simple client can make authenticated requests to the Simple API on behalf of a patient with the following
        credentials:
        - API Access Token
        - Patient ID

        In order to obtain these credentials, a Simple client can authenticate a patient with the following steps. The
        client will need the patient's BP Passport UUID to perform the authentication.
        1. Submit the patient's BP Passport UUID to the [`POST /v4/patients/activate` endpoint](#tag/Patient/paths/~1patient~1activate/post).
           This will trigger an OTP message to be sent to the patient's registered phone number.
        2. Submit the patient's BP Passport UUID and OTP (received after the previous step) to the [`POST /v4/patients/login` endpoint](#tag/Patient/paths/~1patient~1login/post)

        On successful authentication, the client will receive a payload containing an API access token and a patient ID.
        Both of these data points need to be attached to subsequent requests as request headers as shown below.
        - `Authorization: Bearer <access token>`
        - `X-Patient-Id: <patient ID>`

        The API access token will remain valid until the patient signs into another device.

        The comprehensive list of authentication mechanisms used is provided below. It lists the specific details of
        using access tokens and other request headers to authenticate with the API.
      title: "Simple Server"
      logo:
        image: "rtsl_logo.png"
        background_color: "#FFFFFF"
      contact:
        email: "eng-backend@resolvetosavelives.org"
      license:
        name: "MIT"
        url: "https://github.com/simpledotorg/simple-server/blob/master/LICENSE"

  faker:
    name:
      first_name:
        [
          "Ishita",
          "Riya",
          "Aditya",
          "Shreya",
          "Mahesh",
          "Priya",
          "Deepak",
          "Rahul",
          "Ankit",
          "Tanvi",
          "Amit",
          "Yash",
          "Abhishek",
          "Tanya",
          "Shyam",
          "Vani",
          "Divya",
          "Rohit",
          "Anjali",
          "Priyanka",
        ]
      last_name:
        [
          "Lamba",
          "Bahl",
          "Sodhi",
          "Sardana",
          "Puri",
          "Chhabra",
          "Khanna",
          "Malhotra",
          "Mehra",
          "Garewal",
          "Dhillon",
          "Bharathi",
          "Madhu",
          "Bharathi",
          "Manabi",
          "Anjum",
          "Vani",
          "Riya",
          "Shreya",
        ]
